@inject Blazored.LocalStorage.ILocalStorageService storage
@inject AuthenticationStateProvider AuthenticationStatePrivider
@inject NavigationManager Navigation

@using System.Security.Claims

日<Authorizeview>
    <Authorized>
      <MudMenu Icon="@Icons.Filled.Person" Color="Color.Secondary" Direction= "Direction.Bottom" offsetv-"true">
          <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
          <MudMenuItem>Logout</MudMenuItem>
      </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Secondary" OnClick='() =>Navigation.NavigateTo("/authentication/login")' />
    </NotAuthorized>
</AuthorizeView>
@code{

    private async Task LogOutAsync()
    {
        await storage.RemoveItemAsync("access_token");
        await storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/authentication/login");
    }
}

 
